########################################################################
##
## pylons_app - Pylons development environment configuration
##
## The %(here)s variable will be replaced with the parent directory of this file
##
[DEFAULT]
debug = true
## Uncomment and replace with the address which should receive any error reports
email_to = marcin.kuzminski@etelko.pl
smtp_server = localhost
error_email_from = paste_error@localhost

[server:main]
use = egg:Paste#http
host = 127.0.0.1
port = 8001

[app:main]
use = egg:pylons_app
full_stack = true
static_files = false
##default lang
lang=en

cache_dir = %(here)s/data
beaker.session.key = pylons_app
beaker.session.secret = #@^^F&VWUDCT%@$#WR^@&*IWEKF
beaker.session.timeout = 3600

##auto save the session to not to use .save()
beaker.session.auto = True

##true exire at browser close
#beaker.session.cookie_expires = 3600

## If you'd like to fine-tune the individual locations of the cache data dirs
## for the Cache data, or the Session saves, un-comment the desired settings
## here:
#beaker.cache.data_dir = %(here)s/data/cache
#beaker.session.data_dir = %(here)s/data/sessions


##Type of storage used for the session, current types are 
##“dbm”, “file”, “memcached”, “database”, and “memory”. 
##The storage uses the Container API that is also used by the cache system.
beaker.session.type = memory

##if db or memcached is used
##you have to use
#beaker.session.url =
#beaker.session.table_name =

## WARNING: *THE LINE BELOW MUST BE UNCOMMENTED ON A PRODUCTION ENVIRONMENT*
## Debug mode will enable the interactive debugging tool, allowing ANYONE to
## execute malicious code after an exception is raised.
#set debug = false

##dozer logging
#logview.sqlalchemy = #faa
#logview.pylons.templating = #bfb
#logview.sample_app.lib = #aaa

# Logging configuration
[loggers]
keys = root, routes, pylons_app, sqlalchemy

[handlers]
keys = console,file_handler

[formatters]
keys = generic

## LOGGERS ##
[logger_root]
level = DEBUG
handlers = file_handler

[logger_routes]
level = INFO
handlers = console
qualname = routes.middleware
# "level = DEBUG" logs the route matched and routing variables.

[logger_pylons_app]
level = DEBUG
handlers = file_handler
qualname = pylons_app

[logger_sqlalchemy]
level = DEBUG
handlers = 
qualname = sqlalchemy.pool
propagate = 0


## HANDLERS ##

[handler_console]
class = StreamHandler
args = (sys.stderr,)
level = NOTSET
formatter = generic

[handler_file_handler]
class = FileHandler
args = ('./pylons_app.log','a')
level = NOTSET
formatter = generic

## FORMATTERS ##

[formatter_generic]
format = %(asctime)s,%(msecs)03d %(levelname)-5.5s [%(name)s] %(message)s
datefmt = %H:%M:%S

