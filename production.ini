################################################################################
################################################################################
# RhodeCode - Pylons environment configuration                                 #
#                                                                              # 
# The %(here)s variable will be replaced with the parent directory of this file#
################################################################################

[DEFAULT]
debug = true
pdebug = false
################################################################################
## Uncomment and replace with the address which should receive                ## 
## any error reports after application crash                                  ##
## Additionally those settings will be used by RhodeCode mailing system       ##
################################################################################
#email_to = admin@localhost
#error_email_from = paste_error@localhost
#app_email_from = rhodecode-noreply@localhost
#error_message =

#smtp_server = mail.server.com
#smtp_username = 
#smtp_password = 
#smtp_port = 
#smtp_use_tls = false
#smtp_use_ssl = true

[server:main]
##nr of threads to spawn
threadpool_workers = 5

##max request before thread respawn
threadpool_max_requests = 10

##option to use threads of process
use_threadpool = true

use = egg:Paste#http
host = 127.0.0.1
port = 8001

[app:main]
use = egg:rhodecode
full_stack = true
static_files = true
lang=en
cache_dir = %(here)s/data
index_dir = %(here)s/data/index
app_instance_uuid = prod1234
cut_off_limit = 256000
force_https = false 
commit_parse_limit = 50
use_gravatar = true

####################################
###        CELERY CONFIG        ####
####################################
use_celery = false
broker.host = localhost
broker.vhost = rabbitmqhost
broker.port = 5672
broker.user = rabbitmq
broker.password = qweqwe

celery.imports = rhodecode.lib.celerylib.tasks

celery.result.backend = amqp
celery.result.dburi = amqp://
celery.result.serialier = json

#celery.send.task.error.emails = true
#celery.amqp.task.result.expires = 18000

celeryd.concurrency = 2
#celeryd.log.file = celeryd.log
celeryd.log.level = debug
celeryd.max.tasks.per.child = 1

#tasks will never be sent to the queue, but executed locally instead.
celery.always.eager = false

####################################
###         BEAKER CACHE        ####
####################################
beaker.cache.data_dir=%(here)s/data/cache/data
beaker.cache.lock_dir=%(here)s/data/cache/lock

beaker.cache.regions=super_short_term,short_term,long_term,sql_cache_short,sql_cache_med,sql_cache_long

beaker.cache.super_short_term.type=memory
beaker.cache.super_short_term.expire=10

beaker.cache.short_term.type=memory
beaker.cache.short_term.expire=60

beaker.cache.long_term.type=memory
beaker.cache.long_term.expire=36000

beaker.cache.sql_cache_short.type=memory
beaker.cache.sql_cache_short.expire=10

beaker.cache.sql_cache_med.type=memory
beaker.cache.sql_cache_med.expire=360

beaker.cache.sql_cache_long.type=file
beaker.cache.sql_cache_long.expire=3600

####################################
###       BEAKER SESSION        ####
####################################
## Type of storage used for the session, current types are 
## dbm, file, memcached, database, and memory. 
## The storage uses the Container API 
##that is also used by the cache system.
beaker.session.type = file

beaker.session.key = rhodecode
beaker.session.secret = g654dcno0-9873jhgfreyu
beaker.session.timeout = 36000

##auto save the session to not to use .save()
beaker.session.auto = False

##true exire at browser close
#beaker.session.cookie_expires = 3600

    
################################################################################
## WARNING: *THE LINE BELOW MUST BE UNCOMMENTED ON A PRODUCTION ENVIRONMENT*  ##
## Debug mode will enable the interactive debugging tool, allowing ANYONE to  ##
## execute malicious code after an exception is raised.                       ##
################################################################################
set debug = false

##################################
###       LOGVIEW CONFIG       ###
##################################
logview.sqlalchemy = #faa
logview.pylons.templating = #bfb
logview.pylons.util = #eee

#########################################################
### DB CONFIGS - EACH DB WILL HAVE IT'S OWN CONFIG    ###
#########################################################
#sqlalchemy.db1.url = sqlite:///%(here)s/rhodecode.db
sqlalchemy.db1.url = postgresql://postgres:qwe@localhost/rhodecode
sqlalchemy.db1.echo = True
sqlalchemy.db1.pool_recycle = 3600
sqlalchemy.convert_unicode = true

################################
### LOGGING CONFIGURATION   ####
################################
[loggers]
keys = root, routes, rhodecode, sqlalchemy, beaker, templates

[handlers]
keys = console, console_sql

[formatters]
keys = generic, color_formatter, color_formatter_sql

#############
## LOGGERS ##
#############
[logger_root]
level = NOTSET
handlers = console

[logger_routes]
level = DEBUG
handlers = 
qualname = routes.middleware
# "level = DEBUG" logs the route matched and routing variables.
propagate = 1

[logger_beaker]
level = DEBUG
handlers = 
qualname = beaker.container
propagate = 1

[logger_templates]
level = INFO
handlers = 
qualname = pylons.templating
propagate = 1

[logger_rhodecode]
level = DEBUG
handlers = 
qualname = rhodecode
propagate = 1

[logger_sqlalchemy]
level = INFO
handlers = console_sql
qualname = sqlalchemy.engine
propagate = 0

##############
## HANDLERS ##
##############

[handler_console]
class = StreamHandler
args = (sys.stderr,)
level = INFO
formatter = color_formatter

[handler_console_sql]
class = StreamHandler
args = (sys.stderr,)
level = WARN
formatter = color_formatter_sql

################
## FORMATTERS ##
################

[formatter_generic]
format = %(asctime)s.%(msecs)03d %(levelname)-5.5s [%(name)s] %(message)s
datefmt = %Y-%m-%d %H:%M:%S

[formatter_color_formatter]
class=rhodecode.lib.colored_formatter.ColorFormatter
format= %(asctime)s.%(msecs)03d %(levelname)-5.5s [%(name)s] %(message)s
datefmt = %Y-%m-%d %H:%M:%S

[formatter_color_formatter_sql]
class=rhodecode.lib.colored_formatter.ColorFormatterSql
format= %(asctime)s.%(msecs)03d %(levelname)-5.5s [%(name)s] %(message)s
datefmt = %Y-%m-%d %H:%M:%S